<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="DropDownBorder" BorderThickness="1" Background="{StaticResource Border}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.Column="0" x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="IsTabStop" Value="False" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="ClickMode" Value="Press" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot"
                                                        Background="{StaticResource ContainerItem_Background}"
                                                        BorderBrush="{StaticResource Border}"
                                                        BorderThickness="1"
                                                        SnapsToDevicePixels="True">
                                                    <Border x:Name="splitBorder"
                                                            BorderBrush="Transparent"
                                                            BorderThickness="1"
                                                            HorizontalAlignment="Right"
                                                            Margin="0" SnapsToDevicePixels="True"
                                                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                              Fill="{StaticResource Gadget_Foreground}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" />
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEditable, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent" />
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent" />
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource Gadget_ForegroundHovered}" />
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                            <Condition Binding="{Binding IsEditable, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ContainerItem_BackgroundHovered}" />
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Border_Hovered}" />
                                                        <!--<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundHovered}"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundHovered}" />-->
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                            <Condition Binding="{Binding IsEditable, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ContainerItem_BackgroundHovered}" />
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Border_Hovered}" />
                                                        <!--<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundHovered}"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundHovered}" />-->
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource Gadget_ForegroundSelected}" />
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                            <Condition Binding="{Binding IsEditable, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ContainerItem_BackgroundHovered}" />
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Border_Selected}" />
                                                        <!--<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundSelected}"/>-->
                                                        <!--<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundSelected}" />-->
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                            <Condition Binding="{Binding IsEditable, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ContainerItem_BackgroundHovered}" />
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Border_Selected}" />
                                                        <!--<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundSelected}"/>-->
                                                        <!--<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Gadget_ForegroundSelected}" />-->
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource Gadget_ForegroundDisabled}" />
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                            <Condition Binding="{Binding IsEditable, 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <!--<Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0" />
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9" />-->
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                            <Condition Binding="{Binding IsEditable,
                                                                RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <!--<Setter Property="Background" TargetName="templateRoot" Value="White" />
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF" />
                                                        <Setter Property="Background" TargetName="splitBorder" Value="Transparent" />
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent" />-->
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>